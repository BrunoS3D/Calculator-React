{"version":3,"sources":["styles.js","components/Calculator/styles.js","components/Button/styles.js","components/Button/index.js","components/Display/styles.js","components/Display/index.js","components/Calculator/index.js","App.js","index.js"],"names":["Container","styled","div","button","Button","props","classes","double","triple","operation","onClick","e","click","label","className","Display","value","Calculator","initialState","displayValue","clearDisplay","values","current","useState","currentState","setCurrentState","setOperation","console","log","addDigit","n","includes","newState","i","newValue","parseFloat","App","ReactDOM","render","document","getElementById"],"mappings":"0TAEO,IAAMA,EAAYC,IAAOC,IAAV,K,2UCAf,IAAMF,EAAYC,IAAOC,IAAV,K,orBCAf,IAAMF,EAAYC,IAAOE,OAAV,KCEP,SAASC,EAAOC,GAC3B,IAAIC,EAAU,UAKd,OAJAA,GAAWD,EAAME,OAAS,SAAW,GACrCD,GAAWD,EAAMG,OAAS,SAAW,GACrCF,GAAWD,EAAMI,UAAY,YAAc,GAGvC,kBAAC,EAAD,CAAWC,QAAS,SAAAC,GAAC,OAAIN,EAAMO,OAASP,EAAMO,MAAMP,EAAMQ,QAAQC,UAAWR,GACxED,EAAMQ,O,qRCVZ,IAAMb,EAAYC,IAAOC,IAAV,KCEP,SAASa,EAAT,GAA6B,IAAVC,EAAS,EAATA,MAC9B,OAAO,kBAAC,EAAD,KAAYA,GCER,SAASC,IACpB,IAAMC,EAAe,CACjBC,aAAc,IACdC,cAAc,EACdX,UAAW,KACXY,OAAQ,CAAC,EAAG,GACZC,QAAS,GANoB,EASOC,mBAASL,GAThB,mBAS1BM,EAT0B,KASZC,EATY,KAejC,SAASC,EAAajB,GAClBkB,QAAQC,IAAInB,GAGhB,SAASoB,EAASC,GACd,GAAU,MAANA,IAAaN,EAAaL,aAAaY,SAAS,KAApD,CAIA,IAEMZ,GAF6C,MAA9BK,EAAaL,cAAwBK,EAAaJ,aACnC,GAAKI,EAAaL,cAClBW,EAEhCE,EAAQ,eAAQR,GAOpB,GALAQ,EAASb,aAAeA,EACxBa,EAASZ,cAAe,EAExBK,EAAgBO,GAEN,MAANF,EAAW,CACX,IAAMG,EAAID,EAASV,QACbY,EAAWC,WAAWhB,GACtBE,EAAM,YAAOW,EAASX,QAC5BA,EAAOY,GAAKC,GAEZF,EAAQ,eAAQA,IACPX,OAASA,EAElBI,EAAgBO,KAIxB,OACI,kBAAC,EAAD,KACI,kBAACjB,EAAD,CAASC,MAAOQ,EAAaL,eAC7B,kBAACf,EAAD,CAAQS,MAAM,KAAKD,MAxC3B,WACIa,EAAgBP,IAuC2BV,QAAM,IAC7C,kBAACJ,EAAD,CAAQS,MAAM,IAAID,MAAOc,EAAcjB,WAAS,IAChD,kBAACL,EAAD,CAAQS,MAAM,IAAID,MAAOiB,IACzB,kBAACzB,EAAD,CAAQS,MAAM,IAAID,MAAOiB,IACzB,kBAACzB,EAAD,CAAQS,MAAM,IAAID,MAAOiB,IACzB,kBAACzB,EAAD,CAAQS,MAAM,IAAID,MAAOc,EAAcjB,WAAS,IAChD,kBAACL,EAAD,CAAQS,MAAM,IAAID,MAAOiB,IACzB,kBAACzB,EAAD,CAAQS,MAAM,IAAID,MAAOiB,IACzB,kBAACzB,EAAD,CAAQS,MAAM,IAAID,MAAOiB,IACzB,kBAACzB,EAAD,CAAQS,MAAM,IAAID,MAAOc,EAAcjB,WAAS,IAChD,kBAACL,EAAD,CAAQS,MAAM,IAAID,MAAOiB,IACzB,kBAACzB,EAAD,CAAQS,MAAM,IAAID,MAAOiB,IACzB,kBAACzB,EAAD,CAAQS,MAAM,IAAID,MAAOiB,IACzB,kBAACzB,EAAD,CAAQS,MAAM,IAAID,MAAOc,EAAcjB,WAAS,IAChD,kBAACL,EAAD,CAAQS,MAAM,IAAID,MAAOiB,EAAUtB,QAAM,IACzC,kBAACH,EAAD,CAAQS,MAAM,IAAID,MAAOiB,IACzB,kBAACzB,EAAD,CAAQS,MAAM,IAAID,MAAOc,EAAcjB,WAAS,KC3D7C2B,MATf,WACI,OACI,kBAACpC,EAAD,KACI,2CACA,kBAACiB,EAAD,QCLZoB,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,W","file":"static/js/main.8321692f.chunk.js","sourcesContent":["import styled from \"styled-components\";\r\n\r\nexport const Container = styled.div``;\r\n","import styled from \"styled-components\";\r\n\r\nexport const Container = styled.div`\r\n    width: 235px;\r\n    height: 320px;\r\n\r\n    overflow: hidden;\r\n    border-radius: 5px;\r\n\r\n    /* background: orange; */\r\n    display: grid;\r\n    grid-template-columns: repeat(4, 25%);\r\n    grid-auto-rows: 1fr 48px 48px 48px 48px 48px;\r\n`;\r\n","import styled from \"styled-components\";\r\n\r\nexport const Container = styled.button`\r\n    --bg-button: #f0f0f0;\r\n    --border-button: solid 1px #888;\r\n\r\n    & {\r\n        font-size: 1.4rem;\r\n        background-color: var(--bg-button);\r\n        border: none;\r\n        border-right: var(--border-button);\r\n        border-bottom: var(--border-button);\r\n        outline: none;\r\n    }\r\n\r\n    &:active {\r\n        background-color: #ccc;\r\n    }\r\n\r\n    &.double {\r\n        grid-column: span 2;\r\n    }\r\n\r\n    &.triple {\r\n        grid-column: span 3;\r\n    }\r\n\r\n    &.operation {\r\n        background-color: #fa8231;\r\n        color: #fff;\r\n    }\r\n\r\n    &.operation:active {\r\n        background-color: #fa8231cc;\r\n    }\r\n`;\r\n","import React from \"react\";\r\n\r\nimport { Container } from \"./styles\";\r\n\r\nexport default function Button(props) {\r\n    let classes = \"button \";\r\n    classes += props.double ? \"double\" : \"\";\r\n    classes += props.triple ? \"triple\" : \"\";\r\n    classes += props.operation ? \"operation\" : \"\";\r\n\r\n    return (\r\n        <Container onClick={e => props.click && props.click(props.label)} className={classes}>\r\n            {props.label}\r\n        </Container>\r\n    );\r\n}\r\n","import styled from \"styled-components\";\r\n\r\nexport const Container = styled.div`\r\n    grid-column: span 4;\r\n    background-color: #0004;\r\n\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: flex-end;\r\n\r\n    padding: 20px;\r\n    font-size: 2.1em;\r\n\r\n    overflow: hidden;\r\n`;\r\n","import React from \"react\";\r\n\r\nimport { Container } from \"./styles\";\r\n\r\nexport default function Display({ value }) {\r\n    return <Container>{value}</Container>;\r\n}\r\n","import React, { useState } from \"react\";\r\n\r\nimport { Container } from \"./styles\";\r\n\r\nimport Button from \"../Button\";\r\nimport Display from \"../Display\";\r\n\r\nexport default function Calculator() {\r\n    const initialState = {\r\n        displayValue: \"0\",\r\n        clearDisplay: false,\r\n        operation: null,\r\n        values: [0, 0],\r\n        current: 0\r\n    };\r\n\r\n    const [currentState, setCurrentState] = useState(initialState);\r\n\r\n    function clearMemory() {\r\n        setCurrentState(initialState);\r\n    }\r\n\r\n    function setOperation(operation) {\r\n        console.log(operation);\r\n    }\r\n\r\n    function addDigit(n) {\r\n        if (n === \".\" && currentState.displayValue.includes(\".\")) {\r\n            return;\r\n        }\r\n\r\n        const clearDisplay = currentState.displayValue === \"0\" || currentState.clearDisplay;\r\n        const currentValue = clearDisplay ? \"\" : currentState.displayValue;\r\n        const displayValue = currentValue + n;\r\n\r\n        let newState = { ...currentState };\r\n\r\n        newState.displayValue = displayValue;\r\n        newState.clearDisplay = false;\r\n\r\n        setCurrentState(newState);\r\n\r\n        if (n !== \".\") {\r\n            const i = newState.current;\r\n            const newValue = parseFloat(displayValue);\r\n            const values = [...newState.values];\r\n            values[i] = newValue;\r\n\r\n            newState = { ...newState };\r\n            newState.values = values;\r\n\r\n            setCurrentState(newState);\r\n        }\r\n    }\r\n\r\n    return (\r\n        <Container>\r\n            <Display value={currentState.displayValue} />\r\n            <Button label=\"AC\" click={clearMemory} triple />\r\n            <Button label=\"/\" click={setOperation} operation />\r\n            <Button label=\"7\" click={addDigit} />\r\n            <Button label=\"8\" click={addDigit} />\r\n            <Button label=\"9\" click={addDigit} />\r\n            <Button label=\"*\" click={setOperation} operation />\r\n            <Button label=\"4\" click={addDigit} />\r\n            <Button label=\"5\" click={addDigit} />\r\n            <Button label=\"6\" click={addDigit} />\r\n            <Button label=\"-\" click={setOperation} operation />\r\n            <Button label=\"1\" click={addDigit} />\r\n            <Button label=\"2\" click={addDigit} />\r\n            <Button label=\"3\" click={addDigit} />\r\n            <Button label=\"+\" click={setOperation} operation />\r\n            <Button label=\"0\" click={addDigit} double />\r\n            <Button label=\".\" click={addDigit} />\r\n            <Button label=\"=\" click={setOperation} operation />\r\n        </Container>\r\n    );\r\n}\r\n","import React from \"react\";\n\nimport { Container } from \"./styles\";\n\nimport Calculator from \"./components/Calculator\";\n\nfunction App() {\n    return (\n        <Container>\n            <h1>Calculadora</h1>\n            <Calculator />\n        </Container>\n    );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}